async function executeSteps(msisdns, accountNumber, srNumber, date) {
    overrideConfirmationDialog();  // Override confirmation dialog before starting

    for (const msisdn of msisdns) {
        // Paste MSISDN
        getElementByXPath('//*[@id="msisdn"]').value = msisdn;
        // Paste account number
        getElementByXPath('//*[@id="account"]').value = accountNumber;
        // Click validate
        getElementByXPath('//*[@id="validate_label"]').click();
        
        // Wait for 10 seconds
        await new Promise(resolve => setTimeout(resolve, 10000));
        
        // Click yes tick box
        getElementByXPath('//*[@id="use_contact"]').click();
        
        // Format the date to "DD-MM-YYYY" format (e.g., convert "12/07/2024" to "12-07-2024")
        const formattedDate = date.replace(/\//g, '-'); // Replace slashes with dashes
        
        // Paste formatted date into the date field
        const dateField = getElementByXPath('//*[@id="action_date"]');
        dateField.value = formattedDate;
        
        // Select reason from dropdown
        let reasonDropdown = getElementByXPath('//*[@id="reason"]');
        for (let option of reasonDropdown.options) {
            if (option.text === 'Post2Pre - Other') {
                reasonDropdown.value = option.value;
                break;
            }
        }
        
        // Paste SR number
        const srNumberField = getElementByXPath('//*[@id="comments"]');
        srNumberField.value = srNumber;
        
        // Click submit
        getElementByXPath('//*[@id="add_label"]').click();

        // Wait for the pop-up and click OK
        await new Promise(resolve => setTimeout(resolve, 6000)); // Adjust this delay if necessary
        clickOkButton(); // Click OK on the pop-up

        // Wait for 6 seconds before the next iteration
        await new Promise(resolve => setTimeout(resolve, 6000));
    }
}

